<%= render "shared/modal",
           modal_id: "editPlaylistModal",
           title: "Éditer la playlist",
           buttons: [
             button_tag("Supprimer le portfolio",
                        type: "button",
                        data: { bs_toggle: "modal", bs_target: "#confirmDeleteModal" },
                        style: "
                          display: inline-block;
                          border: 1px solid rgba(255,0,0,0.5);
                          background: transparent;
                          color: #ff5555;
                          padding: 10px 20px;
                          font-size: 1rem;
                          font-weight: 500;
                          cursor: pointer;
                          transition: transform 0.2s ease-in-out, border-color 0.2s;
                          border-radius: 75px;
                          text-decoration: none;
                        ",
                        onmouseover: "this.style.transform='scale(1.05)'; this.style.borderColor='#ff5555';",
                        onmouseout: "this.style.transform='scale(1)'; this.style.borderColor='rgba(255,0,0,0.5)';"
             ),
             button_tag("Enregistrer",
                        type: "submit",
                        form: "edit_portfolio",
                        style: "
                          display: inline-block;
                          border: 2px solid #fff;
                          background: #fff;
                          color: #000;
                          padding: 10px 20px;
                          font-size: 1rem;
                          font-weight: 500;
                          cursor: pointer;
                          transition: transform 0.2s ease-in-out;
                          border-radius: 75px;
                          text-decoration: none;
                        ",
                        onmouseover: "this.style.transform='scale(1.05)';",
                        onmouseout: "this.style.transform='scale(1)';"
             )
           ] do %>

  <%= form_with model: portfolio,
                url: portfolio_path(portfolio),
                method: :patch,
                html: { id: "edit_portfolio", multipart: true },
                local: true do |f| %>

    <!-- Bannière avec preview et overlay -->
    <div class="mb-3">
      <%= f.label :photo, "Bannière", class: "form-label" %>
      <div id="banner-container" style="position: relative; width:150px; height:150px; margin-bottom:1rem;">
        <img id="photoPreview"
             data-initial-src="<%= portfolio.photo.attached? ? url_for(portfolio.photo) : '/images/default.png' %>"
             src="<%= portfolio.photo.attached? ? url_for(portfolio.photo) : '/images/default.png' %>"
             style="width:150px; height:150px; object-fit:cover; border-radius:1rem; cursor: pointer;"
             onclick="document.getElementById('photoInput').click()" />
        <div class="overlay"
             style="position: absolute; top:0; left:0; right:0; bottom:0;
                    display: none; align-items: center; justify-content: center;
                    background: rgba(0,0,0,0.5); color: #fff;
                    opacity: 0; transition: opacity 0.2s ease-in-out; border-radius:1rem; cursor: pointer;"
             onclick="document.getElementById('photoInput').click()">
          <i data-lucide="pencil" style="width:24px; height:24px;"></i>
        </div>
      </div>
    </div>

    <!-- Input file caché pour uploader une nouvelle photo -->
    <%= f.file_field :photo, id: "photoInput", style: "display: none;", onchange: "updatePhotoPreview(this)" %>

    <!-- Champ Titre -->
    <div class="mb-3">
      <%= f.label :title, "Titre de la playlist", class: "form-label" %>
      <%= f.text_field :title, class: "form-control" %>
    </div>

    <!-- Champ Genre -->
    <div class="mb-3">
      <%= f.label :tags, "Genre", class: "form-label" %>
      <%= f.select :tags, Portfolio::TAG_OPTIONS, {}, class: "form-select" %>
    </div>
  <% end %>

  <script>
    // Met à jour la preview de l'image dès qu'un fichier est sélectionné
    function updatePhotoPreview(input) {
      const photoPreview = document.getElementById("photoPreview");
      if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
          photoPreview.src = e.target.result;
        };
        reader.readAsDataURL(input.files[0]);
      }
    }

    document.addEventListener("turbo:load", function() {
      const modal = document.getElementById("editPlaylistModal");
      if (!modal) return;
      
      let formSubmitted = false;
      const form = document.getElementById("edit_portfolio");
      if (form) {
        form.addEventListener("submit", function() {
          formSubmitted = true;
        });
      }
      
      // Gestion du survol sur le conteneur de l'image
      const container = document.getElementById("banner-container");
      const overlay = container.querySelector(".overlay");
      container.addEventListener("mouseenter", function() {
        overlay.style.display = "flex";
        overlay.style.opacity = 1;
      });
      container.addEventListener("mouseleave", function() {
        overlay.style.opacity = 0;
        setTimeout(function() { overlay.style.display = "none"; }, 200);
      });
      
      // Réinitialisation du formulaire et de la preview lors de la fermeture de la modal
      modal.addEventListener("hidden.bs.modal", function() {
        if (!formSubmitted && form) {
          form.reset();
        }
        const photoPreview = document.getElementById("photoPreview");
        if (photoPreview) {
          photoPreview.src = photoPreview.dataset.initialSrc;
        }
        formSubmitted = false;
      });
    });
  </script>
<% end %>
